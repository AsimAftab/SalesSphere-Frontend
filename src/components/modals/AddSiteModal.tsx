import React, { useState } from 'react';
import { 
Â  Â  XMarkIcon, 
Â  Â  MapPinIcon, 
Â  Â  UserIcon, 
Â  Â  PhoneIcon, 
Â  Â  DocumentTextIcon, 
Â  Â  GlobeAltIcon,
Â  Â  CalendarDaysIcon
} from '@heroicons/react/24/outline';
import { LocationMap } from '../maps/LocationMap'; 
import Button from '../UI/Button/Button';
import DatePicker from '../UI/DatePicker/DatePicker'; 
import { type NewSiteData } from '../../api/siteService'; 

interface AddSiteModalProps {
Â  Â  isOpen: boolean;
Â  Â  onClose: () => void;
Â  Â  onSave: (newSite: NewSiteData) => void;
}

// --- SITE FORM DATA STRUCTURE ---
interface SiteFormData {
Â  Â  name: string;
Â  Â  ownerName: string;
Â  Â  address: string;
Â  Â  description: string;
Â  Â  phone: string;
Â  Â  email: string;
Â  Â  latitude: number;
Â  Â  longitude: number;
}
// ---

const AddSiteModal: React.FC<AddSiteModalProps> = ({ isOpen, onClose, onSave }) => {
Â  Â  
Â  Â  const defaultPosition = { lat: 27.7172, lng: 85.324 };

Â  Â  const [formData, setFormData] = useState<SiteFormData>({
Â  Â  Â  Â  name: '',
Â  Â  Â  Â  ownerName: '', 
Â  Â  Â  Â  address: '',
Â  Â  Â  Â  description: '', 
Â  Â  Â  Â  phone: '',
Â  Â  Â  Â  email: '',
Â  Â  Â  Â  latitude: defaultPosition.lat,
Â  Â  Â  Â  longitude: defaultPosition.lng,
Â  Â  });

Â  Â  // ðŸ’¡ CHANGED state name from dateCreated to dateJoined
Â  Â  const [dateJoined, setDateJoined] = useState<Date | null>(null);

Â  Â  const [mapPosition, setMapPosition] = useState(defaultPosition);
Â  Â  const [errors, setErrors] = useState<Record<string, string>>({});
Â  Â  
Â  Â  const reverseGeocode = async (lat: number, lng: number) => {
Â  Â  Â  Â  try {
Â  Â  Â  Â  Â  Â  const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}&addressdetails=1`);
Â  Â  Â  Â  Â  Â  const data = await response.json();
Â  Â  Â  Â  Â  Â  if (data && data.display_name) {
Â  Â  Â  Â  Â  Â  Â  Â  setFormData(prev => ({
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ...prev,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  address: data.display_name,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  latitude: lat,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  longitude: lng,
Â  Â  Â  Â  Â  Â  Â  Â  }));
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  } catch (error) { console.error('Error reverse geocoding:', error); }
Â  Â  };

Â  Â  const handleLocationChange = (location: { lat: number; lng: number }) => {
Â  Â  Â  Â  setMapPosition(location);
Â  Â  Â  Â  reverseGeocode(location.lat, location.lng);
Â  Â  };

Â  Â  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
Â  Â  Â  Â  const { name, value } = e.target;
Â  Â  Â  Â  
Â  Â  Â  Â  if (name === 'latitude' || name === 'longitude') {
Â  Â  Â  Â  Â  Â  Â setFormData(prev => ({ ...prev, [name]: value as any })); 

Â  Â  Â  Â  Â  Â  Â const lat = name === 'latitude' ? parseFloat(value) : parseFloat(formData.latitude as any);
Â  Â  Â  Â  Â  Â  Â const lng = name === 'longitude' ? parseFloat(value) : parseFloat(formData.longitude as any);
Â  Â  Â  Â  Â  Â  Â 
Â  Â  Â  Â  Â  Â  Â if (!isNaN(lat) && !isNaN(lng)) {
Â  Â  Â  Â  Â  Â  Â  Â  Â setMapPosition({ lat, lng });
Â  Â  Â  Â  Â  Â  Â }

Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  setFormData(prev => ({ ...prev, [name]: value }));
Â  Â  Â  Â  }

Â  Â  Â  Â  if (errors[name]) setErrors(prev => ({ ...prev, [name]: '' }));
Â  Â  };

Â  Â  // ðŸ’¡ CHANGED function name and uses dateJoined
Â  Â  const handleDateChange = (date: Date | null) => {
Â  Â  Â  Â  setDateJoined(date);
Â  Â  Â  Â  if (errors.dateJoined) {
Â  Â  Â  Â  Â  Â  setErrors(prev => ({ ...prev, dateJoined: '' }));
Â  Â  Â  Â  }
Â  Â  };

Â  Â  const validate = () => {
Â  Â  Â  Â  const newErrors: Record<string, string> = {};
Â  Â  Â  Â  
Â  Â  Â  Â  if (!formData.name.trim()) newErrors.name = 'Site name is required';
Â  Â  Â  Â  if (!formData.ownerName.trim()) newErrors.ownerName = 'Owner name is required';
Â  Â  Â  Â  if (!dateJoined) newErrors.dateJoined = 'Date joined is required'; 
Â  Â  Â  Â  if (!formData.address.trim()) newErrors.address = 'Address is required';
Â  Â  Â  Â  if (!formData.description.trim()) newErrors.description = 'Description is required';
Â  Â  Â  Â  if (formData.email.trim() && !/\S+@\S+\.\S+/.test(formData.email)) {
            newErrors.email = 'Valid email is required if provided';
        }
Â  Â  Â  Â  if (!formData.phone.trim()) newErrors.phone = 'Phone number is required';
Â  Â  Â  Â  
Â  Â  Â  Â  if (isNaN(Number(formData.latitude))) newErrors.latitude = 'Latitude must be a valid number';
Â  Â  Â  Â  if (isNaN(Number(formData.longitude))) newErrors.longitude = 'Longitude must be a valid number';
Â  Â  Â  Â  
Â  Â  Â  Â  setErrors(newErrors);
Â  Â  Â  Â  return Object.keys(newErrors).length === 0;
Â  Â  };

Â  Â  const handleSubmit = (e: React.FormEvent) => {
Â  Â  Â  Â  e.preventDefault();
Â  Â  Â  Â  if (!validate()) return;

Â  Â  Â  Â  // ðŸ’¡ Formats dateJoined
Â  Â  Â  Â  const formattedDate = dateJoined!.toLocaleDateString('en-CA', { 
Â  Â  Â  Â  Â  Â  year: 'numeric', month: '2-digit', day: '2-digit' 
Â  Â  Â  Â  }).replace(/\//g, '-'); 
Â  Â  Â  Â  
Â  Â  Â  Â  const newSite: NewSiteData = {
Â  Â  Â  Â  Â  Â  name: formData.name,
Â  Â  Â  Â  Â  Â  ownerName: formData.ownerName, 
Â  Â  Â  Â  Â  Â  dateJoined: formattedDate, 
Â  Â  Â  Â  Â  Â  address: formData.address,
Â  Â  Â  Â  Â  Â  description: formData.description, 
Â  Â  Â  Â  Â  Â  phone: formData.phone, 
Â  Â  Â  Â  Â  Â  email: formData.email, 
Â  Â  Â  Â  Â  Â  latitude: Number(formData.latitude),
Â  Â  Â  Â  Â  Â  longitude: Number(formData.longitude),
Â  Â  Â  Â  };

Â  Â  Â  Â  onSave(newSite);
Â  Â  Â  Â  handleClose();
Â  Â  };

Â  Â  const handleClose = () => {
Â  Â  Â  Â  setFormData({
Â  Â  Â  Â  Â  Â  name: '', ownerName: '', address: '', description: '', phone: '', email: '',
Â  Â  Â  Â  Â  Â  latitude: defaultPosition.lat, longitude: defaultPosition.lng,
Â  Â  Â  Â  });
Â  Â  Â  Â  // ðŸ’¡ CLEARED dateJoined state
Â  Â  Â  Â  setDateJoined(null); 
Â  Â  Â  Â  setMapPosition(defaultPosition);
Â  Â  Â  Â  setErrors({});
Â  Â  Â  Â  onClose();
Â  Â  };

Â  Â  if (!isOpen) return null;

Â  Â  return (
Â  Â  Â  Â  <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4" style={{ zIndex: 9999 }}>
Â  Â  Â  Â  Â  Â  <div className="bg-white rounded-lg max-w-3xl w-full max-h-[90vh] overflow-y-auto" style={{ zIndex: 10000 }}>
Â  Â  Â  Â  Â  Â  Â  Â  {/* Header */}
Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center justify-between py-2 px-6 border-b border-gray-200 sticky top-0 bg-white z-10">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <h2 className="text-2xl font-bold text-gray-800">Add New Site</h2>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <Button type="button" onClick={handleClose} className="bg-transparent p-1 rounded-full hover:bg-red-100">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <XMarkIcon className="h-6 w-6 text-gray-500 hover:text-red-500" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </Button>
Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  {/* Form */}
Â  Â  Â  Â  Â  Â  Â  Â  <form onSubmit={handleSubmit} className="p-6">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* --- MAIN FORM GRID CONTAINER --- */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="grid grid-cols-1 md:grid-cols-2 gap-x-6 gap-y-6">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* SECTION 1: General Details Header (Spans 2 columns) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="md:col-span-2 pb-2 border-b border-gray-200">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <h3 className="text-lg font-semibold text-gray-900 flex items-center gap-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <UserIcon className="w-5 h-5 text-blue-600" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  General Details
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </h3>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* 1ST ROW: Site Name (FULL WIDTH) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="md:col-span-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Site Name <span className="text-red-500">*</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text" name="name" value={formData.name} onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${errors.name ? 'border-red-500' : 'border-gray-300'}`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="e.g., Main Warehouse"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {errors.name && <p className="mt-1 text-sm text-red-500">{errors.name}</p>}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* 2ND ROW, LEFT: Owner Name */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Owner Name <span className="text-red-500">*</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="text" name="ownerName" value={formData.ownerName} onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${errors.ownerName ? 'border-red-500' : 'border-gray-300'}`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Enter site owner/manager name"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {errors.ownerName && <p className="mt-1 text-sm text-red-500">{errors.ownerName}</p>}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* 2ND ROW, RIGHT: Date Joined */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-2 flex items-center gap-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <CalendarDaysIcon className="w-4 h-4 text-gray-500"/>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Date Joined <span className="text-red-500">*</span> {/* ðŸ’¡ CHANGED label */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <DatePicker
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  value={dateJoined}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onChange={handleDateChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="YYYY-MM-DD"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {errors.dateJoined && <p className="text-red-500 text-sm mt-1">{errors.dateJoined}</p>} {/* ðŸ’¡ CHANGED error key */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>


Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* SECTION 2: Contact Details Header (Spans 2 columns, with top margin) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="md:col-span-2 pt-4 pb-2 mt-4 border-t border-b border-gray-200">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â <h3 className="text-lg font-semibold text-gray-900 flex items-center gap-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â <PhoneIcon className="w-5 h-5 text-blue-600" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â Contact Details
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â </h3>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Phone */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-2">Phone <span className="text-red-500">*</span></label>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="tel" name="phone" value={formData.phone} onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${errors.phone ? 'border-red-500' : 'border-gray-300'}`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Enter phone number"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {errors.phone && <p className="mt-1 text-sm text-red-500">{errors.phone}</p>}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Email */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-2">Email</label>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="email" name="email" value={formData.email} onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${errors.email ? 'border-red-500' : 'border-gray-300'}`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="contact@site.com"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {errors.email && <p className="mt-1 text-sm text-red-500">{errors.email}</p>}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* SECTION 3: Location Map (Spans 2 columns) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="md:col-span-2 mt-4">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <MapPinIcon className="w-5 h-5 text-blue-600" />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Location Map
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </h3>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Reduced map height from h-80 to h-64 */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="h-64 rounded-lg overflow-hidden border border-gray-300 shadow-md">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <LocationMap position={mapPosition} onLocationChange={handleLocationChange} />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* SECTION 4: Address (Spans 2 columns) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="md:col-span-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Full Address <span className="text-red-500">*</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <textarea
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  name="address" value={formData.address} onChange={handleChange} rows={3}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${errors.address ? 'border-red-500' : 'border-gray-300'}`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Auto-filled from map or enter manually"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {errors.address && <p className="mt-1 text-sm text-red-500">{errors.address}</p>}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* SECTION 5: Latitude & Longitude */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-2 flex items-center gap-1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <GlobeAltIcon className="w-4 h-4 text-gray-500"/>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Latitude <span className="text-red-500">*</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="number" step="any" name="latitude" value={formData.latitude} onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${errors.latitude ? 'border-red-500' : 'border-gray-300'}`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Auto-filled from map"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {errors.latitude && <p className="mt-1 text-sm text-red-500">{errors.latitude}</p>}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <label className="block text-sm font-medium text-gray-700 mb-2 flex items-center gap-1">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <GlobeAltIcon className="w-4 h-4 text-gray-500"/>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Longitude <span className="text-red-500">*</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </label>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <input
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  type="number" step="any" name="longitude" value={formData.longitude} onChange={handleChange}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${errors.longitude ? 'border-red-500' : 'border-gray-300'}`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Auto-filled from map"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {errors.longitude && <p className="mt-1 text-sm text-red-500">{errors.longitude}</p>}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* SECTION 6: Description (Spans 2 columns) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="md:col-span-2 mt-4 pt-4 border-t border-gray-200">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center gap-2">
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â <DocumentTextIcon className="w-5 h-5 text-blue-600"/>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â Description <span className="text-red-500">*</span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â </h3>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <textarea
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  name="description" value={formData.description} onChange={handleChange} rows={4}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  className={`w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent ${errors.description ? 'border-red-500' : 'border-gray-300'}`}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  placeholder="Provide a detailed description of the site (e.g., regional hub, inventory capacity, specialized equipment)"
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  />
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {errors.description && <p className="mt-1 text-sm text-red-500">{errors.description}</p>}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* --- END MAIN FORM GRID CONTAINER --- */}

Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {/* Footer Buttons (REDUCED HEIGHT) */}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <div className="flex items-center justify-end gap-4 pt-4 mt-6 border-t border-gray-200">
                        <Button type="button" variant="ghost" onClick={handleClose} className="py-1.5 px-4 text-sm bg-white text-gray-700 border border-gray-300 hover:bg-gray-50">Cancel</Button>
                        <Button type="submit" variant="primary" className="py-1.5 px-4 text-sm">Add Prospect</Button>
                    </div>
Â  Â  Â  Â  Â  Â  Â  Â  </form>
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  );
};

export default AddSiteModal;





